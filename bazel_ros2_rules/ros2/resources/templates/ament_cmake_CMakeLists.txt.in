# @NAME@ is an ament CMake project to help collect @PACKAGE@'s exported
# configuration. It does so by means of an empty binary library that
# declares a direct dependency on @PACKAGE@. All relevant paths and
# flags can then be retrived from CMake's code model (e.g. using
# CMake's server mode on this project).
cmake_minimum_required(VERSION 3.5)
project(@NAME@ C CXX)

find_package(ament_cmake REQUIRED)

# TODO(sloretz) Remove when https://github.com/ros2/rviz/pull/920 is released
if("@PACKAGE@" STREQUAL "rviz_ogre_vendor")
  set(CMAKE_FIND_LIBRARY_PREFIXES ";lib")
endif()

find_package(@PACKAGE@ REQUIRED)

file(WRITE empty.cc "")
add_library(${PROJECT_NAME} SHARED empty.cc)
if("@PACKAGE@" STREQUAL "rviz_ogre_vendor")
  # TODO(hidmic): generalize special case handling
  set(OGRE_TARGETS)
  if(TARGET rviz_ogre_vendor::OgreMain)
    list(APPEND OGRE_TARGETS rviz_ogre_vendor::OgreMain)
  endif()
  if(TARGET rviz_ogre_vendor::OgreOverlay)
    list(APPEND OGRE_TARGETS rviz_ogre_vendor::OgreOverlay)
  endif()
  if(TARGET rviz_ogre_vendor::RenderSystem_GL)
    list(APPEND OGRE_TARGETS rviz_ogre_vendor::RenderSystem_GL)
  endif()
  if(TARGET rviz_ogre_vendor::OgreGLSupport)
    list(APPEND OGRE_TARGETS rviz_ogre_vendor::OgreGLSupport)
  endif()
  target_link_libraries(${PROJECT_NAME}
    ${OGRE_TARGETS} ${OGRE_LIBRARIES} ${OGRE_PLUGINS}
  )
  file(GLOB ogre_plugin_libraries "${OGRE_PLUGIN_DIR}/*.so*")
  target_link_libraries(${PROJECT_NAME} ${ogre_plugin_libraries})
elseif("@PACKAGE@" STREQUAL "console_bridge_vendor")
  # TODO(sloretz) How to get targets from externalproject_add based vendor
  # packages?
  find_package(console_bridge REQUIRED)
  target_link_libraries(${PROJECT_NAME} console_bridge::console_bridge)
else()
  ament_target_dependencies(${PROJECT_NAME} @PACKAGE@)
  # TODO(hidmic): figure out why this is sometimes necessary
  if(TARGET @PACKAGE@)
    target_link_libraries(${PROJECT_NAME} @PACKAGE@)
  endif()
endif()
