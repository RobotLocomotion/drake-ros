# Copyright 2022 Open Source Robotics Foundation, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@ros2//:ros_cc.bzl", "ros_cc_test")
load("@ros2//:ros_py.bzl", "ros_py_test")
load(
    "@drake//tools/skylark:pybind.bzl",
    "pybind_py_library",
)
load(
    "@drake_ros//tools/skylark:drake_ros_pybind.bzl",
    "drake_ros_cc_shared_library",
)

PYBIND_EXCLUDES = [
    "**/*_py.cc",
    "**/*_pybind.h",
]

# TODO(sloretz) more granular targets for static linking
_cc_srcs = glob(
    [
        "*.cc",
        "*.h",
    ],
    exclude = PYBIND_EXCLUDES,
)

_cc_hdrs = glob(
    ["*.h"],
    exclude = PYBIND_EXCLUDES + ["internal_*.h"],
)

cc_library(
    name = "viz",
    srcs = _cc_srcs,
    hdrs = _cc_hdrs,
    include_prefix = "drake_ros/viz",
    visibility = ["//visibility:public"],
    deps = [
        "//core",
        "//tf2",
        "@drake//common",
        "@drake//geometry",
        "@drake//math",
        "@drake//multibody/plant",
        "@drake//systems/framework",
        "@ros2//:geometry_msgs_cc",
        "@ros2//:rclcpp_cc",
        "@ros2//:visualization_msgs_cc",
    ],
)

drake_ros_cc_shared_library(
    name = "shared_library",
    srcs = _cc_srcs,
    hdrs = _cc_hdrs,
    include_prefix = "drake_ros/viz",
    visibility = ["//visibility:public"],
    deps = [
        "//core:shared_library",
        "//tf2:shared_library",
        "@drake//:drake_shared_library",
        "@eigen",
        "@ros2//:geometry_msgs_cc",
        "@ros2//:rclcpp_cc",
        "@ros2//:visualization_msgs_cc",
    ],
)

ros_cc_test(
    name = "test_name_conventions",
    size = "small",
    srcs = ["test/test_name_conventions.cc"],
    includes = ["."],
    rmw_implementation = "rmw_cyclonedds_cpp",
    deps = [
        ":viz",
        "@com_google_googletest//:gtest_main",
    ],
)

ros_cc_test(
    name = "test_scene_markers",
    size = "small",
    srcs = ["test/test_scene_markers.cc"],
    rmw_implementation = "rmw_cyclonedds_cpp",
    deps = [
        ":viz",
        "@com_google_googletest//:gtest_main",
        "@drake//common",
        "@drake//geometry",
        "@drake//math",
        "@drake//multibody/plant",
        "@drake//systems/framework",
        "@drake//systems/primitives",
        "@ros2//:visualization_msgs_cc",
    ],
)

cc_library(
    name = "python_bindings_internal_hdrs",
    hdrs = glob(["*_pybind.h"]),
    include_prefix = "drake_ros/viz",
)

pybind_py_library(
    name = "cc_py",
    cc_deps = [
        ":python_bindings_internal_hdrs",
        ":shared_library",
    ],
    cc_so_name = "_cc",
    cc_srcs = ["cc_py.cc"],
    py_deps = [
        "//core:core_py",
        "//tf2:tf2_py",
    ],
)

py_library(
    name = "module_py",
    srcs = ["__init__.py"],
    deps = [":cc_py"],
)

py_library(
    name = "viz_py",
    visibility = ["//visibility:public"],
    deps = [":module_py"],
)

ros_py_test(
    name = "viz_py_test",
    srcs = ["test/viz_py_test.py"],
    main = "test/viz_py_test.py",
    deps = [":viz_py"],
)

ros_py_test(
    name = "test_python_bindings",
    srcs = ["test/test_python_bindings.py"],
    legacy_create_init = False,
    main = "test/test_python_bindings.py",
    deps = [
        ":viz_py",
        "//core:core_py",
        "@drake//bindings/pydrake",
        "@ros2//:rclpy_py",
        "@ros2//:visualization_msgs_py",
        "@ros2//resources/rmw_isolation:rmw_isolation_py",
    ],
)
