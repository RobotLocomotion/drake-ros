module (
    name = "ros2_example_bazel_installed",
    version = "0.1.0",
)

bazel_dep(name = "bazel_skylib", version = "1.8.1")
bazel_dep(name = "rules_python", version = "1.5.1")

bazel_dep(name = "bazel_ros2_rules", version = "1.0.0")
local_path_override(
    module_name = "bazel_ros2_rules",
    path = "../bazel_ros2_rules",
)

# Please keep this list sorted
ROS_REQUIRED_PACKAGES = [
    "action_msgs",
    "builtin_interfaces",
    "console_bridge_vendor",
    "rclcpp",
    "rclcpp_action",
    "rclpy",
    "ros2cli",
    "ros2cli_common_extensions",
    "rosbag2",
    "ros2bag_mcap_cli",
    "ros2bag_sqlite3_cli",
    "rosidl_default_generators",
    "tf2_py",
] + [
    # These are possible RMW implementations. Uncomment one and only one to
    # change implementations
    "rmw_cyclonedds_cpp",
    # "rmw_fastrtps_cpp",
]

local_ros2 = use_extension("@bazel_ros2_rules//lib:extensions.bzl", "local_ros2")
local_ros2.distribution(
    include_packages = ROS_REQUIRED_PACKAGES,
    overlays = ["/home/mhidalgo/Workspaces/jazzy_ws/install"],
)
use_repo(local_ros2, **{"ros2": "local_ros2"})

local_runtime_repo = use_repo_rule(
    "@rules_python//python/local_toolchains:repos.bzl",
    "local_runtime_repo",
)

local_runtime_toolchains_repo = use_repo_rule(
    "@rules_python//python/local_toolchains:repos.bzl",
    "local_runtime_toolchains_repo",
)

local_runtime_repo(
    name = "local_python3",
    interpreter_path = "python3",
    on_failure = "fail",
)

local_runtime_toolchains_repo(
    name = "local_toolchains",
    runtimes = ["local_python3"],
)

register_toolchains("@local_toolchains//:all")